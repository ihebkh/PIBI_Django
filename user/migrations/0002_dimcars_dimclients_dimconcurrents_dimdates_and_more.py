# Generated by Django 5.0.3 on 2024-05-13 00:12

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dimcars',
            fields=[
                ('car_pk', models.AutoField(primary_key=True, serialize=False)),
                ('matricule', models.CharField(max_length=255, unique=True)),
                ('car_owner', models.CharField(blank=True, max_length=255, null=True)),
                ('modele', models.CharField(blank=True, max_length=255, null=True)),
                ('car_type', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'dimcars',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimclients',
            fields=[
                ('client_pk', models.AutoField(primary_key=True, serialize=False)),
                ('code_client', models.CharField(max_length=50, unique=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pick_up_date', models.DateField(blank=True, db_column='Pick_Up_Date', null=True)),
                ('pick_up_time', models.TimeField(blank=True, db_column='Pick_Up_Time', null=True)),
                ('drop_off_date', models.DateField(blank=True, db_column='Drop_Off_Date', null=True)),
                ('drop_off_time', models.TimeField(blank=True, db_column='Drop_Off_Time', null=True)),
                ('arrivals_date', models.DateField(blank=True, db_column='Arrivals_Date', null=True)),
                ('departure_date', models.DateField(blank=True, db_column='Departure_Date', null=True)),
            ],
            options={
                'db_table': 'dimclients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimconcurrents',
            fields=[
                ('concurrent_pk', models.AutoField(primary_key=True, serialize=False)),
                ('concurrent_code', models.CharField(max_length=50, unique=True)),
                ('concurrent_name', models.CharField(blank=True, max_length=50, null=True)),
                ('emplacement', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'dimconcurrents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimdates',
            fields=[
                ('date_pk', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, null=True, unique=True)),
                ('jour_mois_annee', models.CharField(blank=True, db_column='Jour_Mois_Annee', max_length=50, null=True)),
                ('annee', models.IntegerField(blank=True, db_column='Annee', null=True)),
                ('id_semestre', models.CharField(blank=True, max_length=45, null=True)),
                ('semestre', models.CharField(blank=True, max_length=45, null=True)),
                ('id_trimestre', models.CharField(blank=True, max_length=45, null=True)),
                ('trimestre', models.CharField(blank=True, max_length=45, null=True)),
                ('id_mois', models.IntegerField(blank=True, null=True)),
                ('mois', models.IntegerField(blank=True, db_column='Mois', null=True)),
                ('lib_mois', models.CharField(blank=True, max_length=45, null=True)),
                ('jour', models.IntegerField(blank=True, null=True)),
                ('id_lib_jour', models.IntegerField(blank=True, null=True)),
                ('lib_jour', models.CharField(blank=True, max_length=45, null=True)),
                ('semaine', models.IntegerField(blank=True, null=True)),
                ('jourdeannee', models.IntegerField(blank=True, db_column='JourDeAnnee', null=True)),
                ('jour_mois_lettre', models.CharField(blank=True, db_column='Jour_mois_lettre', max_length=56, null=True)),
            ],
            options={
                'db_table': 'dimdates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimdestinations',
            fields=[
                ('destination_pk', models.AutoField(primary_key=True, serialize=False)),
                ('destination_code', models.CharField(max_length=50, unique=True)),
                ('destination', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dimdestinations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimdrivers',
            fields=[
                ('driver_pk', models.AutoField(primary_key=True, serialize=False)),
                ('code_driver', models.CharField(max_length=255, unique=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dimdrivers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimpartners',
            fields=[
                ('partner_pk', models.AutoField(primary_key=True, serialize=False)),
                ('code_partner', models.CharField(max_length=50, unique=True)),
                ('partner_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'dimpartners',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimregions',
            fields=[
                ('region_pk', models.AutoField(primary_key=True, serialize=False)),
                ('codepays', models.CharField(db_column='CodePays', max_length=50, unique=True)),
                ('pays', models.CharField(blank=True, db_column='Pays', max_length=255, null=True)),
                ('codepostal', models.CharField(blank=True, db_column='CodePostal', max_length=50, null=True)),
                ('ville', models.CharField(blank=True, db_column='Ville', max_length=50, null=True)),
            ],
            options={
                'db_table': 'dimregions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimrequesttypes',
            fields=[
                ('req_type_pk', models.AutoField(primary_key=True, serialize=False)),
                ('code_req', models.CharField(max_length=50, unique=True)),
                ('req_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factrequest',
            fields=[
                ('request_pk', models.AutoField(primary_key=True, serialize=False)),
                ('nbr_extra_hours', models.IntegerField(blank=True, null=True)),
                ('price_charged', models.FloatField(blank=True, null=True)),
                ('price_extra_hours', models.FloatField(blank=True, null=True)),
                ('tva', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('charges', models.FloatField(blank=True, null=True)),
                ('profit', models.FloatField(blank=True, null=True)),
                ('nbr_cars', models.IntegerField(blank=True, null=True)),
                ('comission', models.FloatField(blank=True, null=True)),
                ('comission_ammount', models.FloatField(blank=True, null=True)),
                ('partner_cost', models.FloatField(blank=True, null=True)),
                ('consommation_price', models.FloatField(blank=True, null=True)),
                ('car_price', models.FloatField(blank=True, null=True)),
                ('consommation_moy_carburant_l_par_100km', models.FloatField(blank=True, db_column='Consommation_moy_carburant_L_par_100km', null=True)),
                ('emission_co2', models.FloatField(blank=True, db_column='Emission_CO2', null=True)),
                ('available_days', models.IntegerField(blank=True, null=True)),
                ('available_hours', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'factrequest',
                'managed': False,
            },
        ),
    ]
